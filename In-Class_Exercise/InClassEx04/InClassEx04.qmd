---
title: "In-class Exercise 04 "
author: "Jezelei Manangan"
date: "September 9, 2024"
date-modified: "last-modified"
execute: 
  eval: true
  echo: true
  freeze: true
---

# 1.0 Installing Packages

For the purposes of this study, six R packages will be used:

They are:

1.  sf
2.  raster
3.  spatstat
4.  sparr
5.  tmap
6.  tidyverse
7.  lubridate

```{r}
pacman::p_load(sf,raster,spatstat,sparr,tmap,tidyverse,readr, dplyr)
```

# 2.0 Importing and Preparing Study Area

In this exercise, we will use the following datasets:

-   forestfires, a csv file provides locations of forest fire detected from the Moderate Resolution Imaging Spectroradiometer (MODIS) sensor data. The data are downloaded from [Fire Information for Resource Management System](https://firms.modaps.eosdis.nasa.gov/download/). For the purpose of this exercise, only forest fires within Kepulauan Bangka Belitung will be used.

-   Kepulauan_Bangka_Belitung, an ESRI shapefile showing the sub-district (i.e.Â [kelurahan](https://en.wikipedia.org/wiki/Villages_of_Indonesia)) boundary of Kepulauan Bangka Belitung. The data set was downloaded from [Indonesia Geospatial](https://www.indonesia-geospasial.com/2023/05/download-shapefile-batas-administrasi.html) portal. The original data covers the whole Indonesia. For the purpose of this exercise, only sub-districts within Kepulauan Bangka Belitung are extracted.

## 2.1 Importing study area

In this section, [*st_read()*](https://r-spatial.github.io/sf/reference/st_read.html) of **sf** package will be used to import the two geospatial data sets mentioned in previous section into R environment.

**Kepulauan_Bangka_Belitung**

```{r}
kbb <- st_read(dsn = "data/rawdata/", layer = "Kepulauan_Bangka_Belitung") 
```

Looking further into the dataset, we notice that the coordinates have Polygon Z Feature.

-   Before proceeding, we need to dissolve the boundaries, and check for multi-polygon features. In this case, Polygon Z is not needed and may interfere with further analysis

    -   Group Z boundaries up

    -   Remove the Z value

    -   Transform the projection

```{r}
kbb_sf <- st_read(dsn = "data/rawdata/", layer = "Kepulauan_Bangka_Belitung") %>% 
  st_union() %>% 
  st_zm(drop = TRUE, what="ZM") %>% 
  st_transform(crs=32748)
```

## 2.2 Convergint to owin object

Next, `as.owin()` is used to convert *kbb* into an owin object.

```{r}
kbb_owin <- as.owin(kbb_sf)
kbb_owin
```

Next, `class()` is used to confim if the output is indeed an owin object

```{r}
class(kbb_owin)
```

# 3.0 Importing and Preparing Forest Fire Data

Next, we will import the forest fire data set into the R environment

**forestfire.csv**

```{r}
fire_sf <- read_csv("data/rawdata/forestfires.csv") %>% 
  st_as_sf(coords = c("longitude", "latitude"),
           crs=4326 ) %>% 
  st_transform(crs=32748)
```

```{r}
st_crs(fire_sf)
```

Because **ppp** object only accepts numerical aor character as mark. The code chunk below is used to convert data type of acq_date to numeric.

```{r}
fire_sf <- fire_sf %>% 
  mutate(DayofYear = yday(acq_date)) %>% 
  mutate(Month_num = month(acq_date)) %>% 
  mutate(Month_fac = month(acq_date, 
         label = TRUE, 
         abbr = FALSE))
```

# 4.0 Visualizing the Fire Points

## 4.1 Overall Plot

```{r}
tmap_mode('plot')
tm_shape(kbb_sf) + 
  tm_polygons() + 
  tm_shape(fire_sf) + 
  tm_bubbles(alpha = 0.5, size = 0.05) + 
  tm_layout(main.title = "Forest Fire Distribution in Kepulauan & Bangka Belitung", 
            ) + 
tm_grid(alpha = 0.2)
```

## 4.2 Visualizing Geographic Distribution of Forest Fires by Month

```{r}
tmap_mode('plot')
tm_shape(kbb_sf) + 
  tm_polygons() + 
  tm_shape(fire_sf) + 
  tm_dots(alpha = 0.5, size = 0.1) + 
  tm_layout(main.title = "Forest Fire Distribution by Month Factor in Kepulauan & Bangka Belitung", 
            ) + 
  tm_facets(by="Month_fac", 
            free.coords=FALSE,
            drop.units=TRUE)
```

# 5.0 Computing STKDE By Month

We will compute STKDE by `spattemp.density()`.

## 5.1 Extracting Forest fires by month

The code chunk below is used to remofe the unwanted fields from fire_sf data.frame. This is because `as.ppp()` only need the mark field and geometry field from the input sf data.frame

```{r}
fire_month <- fire_sf %>% 
  select(Month_num)

class(fire_month)
```

## 5.2 Creating ppp

The code chunk below is used to derive a ppp obect called fire_month from fire_month sf data.frame

```{r}
fire_month_ppp <- as.ppp(st_coordinates(fire_sf), W= kbb_owin)
marks(fire_month_ppp) <- fire_sf$DayofYear
```

```{r}
st_crs(kbb_sf)
st_crs(fire_sf)
```

The code chunk is used to check the output is in the correct object class:

```{r}
summary(fire_month_ppp)
```

In the code chunk below, we check for duplicates.

```{r}
any(duplicated(fire_month_ppp))
```

## 5.3 Including Owin object

```{r}
fire_month_owin <- fire_month_ppp[kbb_owin]
summary(fire_month_owin)
```

## 5.4 Computing Spatio-temporal KDE

```{r}
st_kde <- spattemp.density(fire_month_owin)
summary(st_kde)
```

## 5.5 Plotting the spatio-temporal KDE Object

In the code chunk below, `plot()` of R base is used to the KDE for between July 2023 - December 2023.

```{r}
par(mfrow = c(2, 3), fig.width = 12, fig.height = 10)

# Define the months you want to plot (July to December)
tims <- c(7,8,9,10,11,12)  

for (i in tims){
  kde_values <- st_kde$z[[i]]$v
  image(kde_values,
        main=paste("KDE at month", i))
}
```

# 6.0 Computing STKDE By Day of Year

# 7.0 Computing STKDE By Month
